version: "3"

services:
  migration:
    image: dotnet-voyage-log-migration
    build:
      context: .
      dockerfile: ./docker/migration/Dockerfile
      args:
        POSTGRES_CONNECTION_STRING: User ID=postgres;Password=postgres;Host=postgres;Port=5432;Database=voyager
        SECRET_KEY: 12345678901234567890123456789012345678910123456
        JWT_AUDIENCE: webapi:8080
        JWT_ISSUER: webapi:8080
        INIT_ADMIN_USERNAME: admin
        INIT_ADMIN_EMAIL: adminpassword
        INIT_ADMIN_PASSWORD: admin@admin.com  
    depends_on:
      postgres:
        condition: service_healthy
    restart: on-failure
    
  webapi:
    image: dotnet-voyage-log
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        POSTGRES_CONNECTION_STRING: User ID=postgres;Password=postgres;Host=postgres;Port=5432;Database=voyager
        SECRET_KEY: 12345678901234567890123456789012345678910123456
        JWT_AUDIENCE: webapi:8080
        JWT_ISSUER: webapi:8080
        INIT_ADMIN_USERNAME: admin
        INIT_ADMIN_EMAIL: adminpassword
        INIT_ADMIN_PASSWORD: admin@admin.com  
    depends_on:
      postgres:
        condition: service_healthy
    restart: on-failure
    ports:
      - 8080:8080  

  postgres:
    image: postgres:12.3-alpine
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    volumes:
      - postgres:/var/lib/postgresql/data
    healthcheck:
        test: ["CMD-SHELL", "pg_isready", "-d", "db_prod"]
        interval: 30s
        timeout: 60s
        retries: 5
        start_period: 80s  
  pgadmin:
    image: dpage/pgadmin4:4.23
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@pgadmin.com
      PGADMIN_DEFAULT_PASSWORD: password
      PGADMIN_LISTEN_PORT: 80
    ports:
      - 15432:80
    volumes:
      - pgadmin:/var/lib/pgadmin
    depends_on:
      - postgres

volumes:
  postgres:
  pgadmin: